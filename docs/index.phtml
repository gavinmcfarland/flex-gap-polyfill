<html>

	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width"/>

		<script>
	function toggle() {
		var page = document.getElementById('page')
		var label = document.getElementById('label')

		if (label.innerHTML === "on") {
    		label.innerHTML = "off";
  		} else {
    		label.innerHTML = "on";
  		}

		page.classList.toggle('flex-gap-not-supported')
	}
	</script>

	<style>

	body {
		--color: #000;
		--background-color: #fff;
		padding: 2em;
		padding-top: 0;
		margin: 0;
		font-family: sans-serif;
		color: var(--color);
		background-color: var(--background-color);;
	}

	@media (prefers-color-scheme: dark) {
  		body   {
			  --color:  #FFF;
			  --background-color: #000;
		}
	}

	@media (max-width: 450px) {
		body {
			padding: 0;
		}
	}


.page {
	max-width: 54em;
	margin-left: auto;
	margin-right: auto;
	padding: 0 2em;
	/* padding-top: 246px; */
}

.outline {
	display: flow-root;
	position: relative;
	margin-bottom: 4em;

	&::after {
		content: '';
		display: block;
		position: absolute;
		top: -1px;
		bottom: -1px;
		left: -1px;
		right: -1px;
		border: 1px dotted var(--color);
		pointer-events: none;
	}
}

.flex-gap-not-supported .container {
	outline: var(--has-fgp) 2px dashed rgba(255, 0, 0, 0.8) !important;
	border-radius: var(--has-fgp) 4px;
}

.container {
	padding: 0 !important;
	background: transparent !important;
	font-size: 13px;

	& > {
		& * {
			box-sizing: border-box;
			background: pink;
			border-radius: 5px;
			padding: 1em;
			font-weight: bold;
		}

		& .container > * {
			background: aqua;
		}

		& .container > .container > * {
			background: lightgrey;
		}

		& .container > .container > .container > * {
			background: yellow;
		}
	}
}

.on-off {
	text-decoration: underline;
	cursor: pointer;
}

.container {
	color: black;
}

a {
	color: rgb(202, 72, 202);
}

.flex-wrap {
	display: flex;
	flex-wrap: wrap;
}

.gap-20px {
	--gap: 20px;
	gap: var(--gap);

}

.gap-40px {
	gap: 40px;
}

.gap-40px-no-flex {
	gap: 40px;
}

.row-gap-40px {
	row-gap: 40px;
}

.column-gap-20px {
	column-gap: 20px;
}

.gap-3\% {
	gap: 3%;
}

.gap-6\% {
	gap: 6%;
}

.gap-2em {
	gap: 2em;
}

.margin-20px {
	gap: 20px;
	margin: 20px;
}

.space-evenly {
	justify-content: space-evenly;
}

.justify-flex-end {
	justify-content: flex-end;
}

.grow {
	flex-grow: 1;
}

.item-50\% {
	width: calc(50% - var(--gap));
}

.grid {
	display: grid;
	margin-left: 20px;
}

.flex {
	display: flex;
}

.no-flex {
	--has-display-flex: initial;
}
.no-flex > * {
	--parent-has-display-flex: initial !important;
}

.w {
	width: auto;
}

.header {
	top: 0px;
    /* left: 0px; */
    /* right: 0px; */
    /* padding: 2em 4em; */
    position: sticky;
	border-bottom: 1px solid var(--color);
	background-color: var(--background-color);
	z-index: 1;
	margin-left: -2em;
	margin-right: -2em;
	margin-bottom: 2em;
	padding: 2em;
}
</style>

	<head>

	<body>

	<div id="page" class="page flex-gap-not-supported">

	<div class="header">
		<h1>Flex Gap Polyfill</h1>

		<p>Below are a list of test cases demonstrating scenarios this polyfill works with. <a href="https://github.com/limitlessloop/flex-gap-polyfill">Github</a></p>

		<p><a class="on-off" onclick="toggle()">Polyfill: <span id="label">on</span></a> Red lines show container with negative margins.</p>

	</div>

	<h4>Basic</h4>
	<pre>
.container {
	display: flex;
	flex-wrap: wrap;
	gap: 20px;
}
	</pre>

	<div class="outline">
		<div class="container gap-20px flex-wrap">
			<div><a href="#">One</a></div>
			<div>Two</div>
			<div>Three</div>
			<div>Four</div>
			<div>Five</div>
		</div>
	</div>

	<h3>Nested</h3>

	<pre>
.container {
	display: flex;
	flex-wrap: wrap;
	gap: 20px;
}

.container .container {
	display: flex;
	flex-wrap: wrap;
	gap: 40px;
}
	</pre>

	<div class="outline">
		<div class="container gap-40px flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
			<div class="container gap-20px flex-wrap">
				<div>A</div>
				<div>B</div>
				<div>C</div>
				<div>D</div>
			</div>
		</div>
	</div>

	<h3>Percentages</h3>

	<p>(Percentage row gaps only appear when height is specified, disabled in polyfill for now).</p>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	gap: 6%;
}
	</pre>

	<div class="outline">
		<div class="container gap-6% flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
		</div>
	</div>

		<h3>Ems</h3>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	gap: 2em;
}
	</pre>

	<div class="outline">
		<div class="container gap-2em flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
		</div>
	</div>

	<h3>Nested Combination (% > px, px > %, em > px, etc)</h3>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	gap: 6%;
}

.container .container {
	display: flex;
	flex-wrap: wrap;
	gap: 20px;
}
	</pre>

	<div class="outline">
		<div class="container gap-6% flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
			<div class="container gap-20px flex-wrap">
				<div>A</div>
				<div>B</div>
				<div>C</div>
				<div>D</div>
			</div>
		</div>
	</div>

	<p>Percentage gaps aren't that reliable if the width of the container is not 100% of it's parent.</p>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	gap: 6%;
}

.container .container {
	display: flex;
	flex-wrap: wrap;
	gap: 3%;
}
	</pre>

	<div class="outline">
		<div class="container gap-6% flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
			<div class="container gap-3% flex-wrap">
				<div>A</div>
				<div>B</div>
				<div>C</div>
				<div>D</div>
			</div>
		</div>
	</div>

	<h3>Margin + Gap</h3>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	margin: 20px;
	gap: 3%;
}
	</pre>

	<div class="outline">
		<div class="container gap-20px margin-20px flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
		</div>
	</div>

	<h3>Justify End</h3>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-end;
	gap: 3%;
}
	</pre>

	<div class="outline">
		<div class="container gap-40px flex-wrap space-evenly justify-flex-end">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
		</div>
	</div>

	<h3>Space Evenly</h3>

	<pre>
.container
	display: flex;
	flex-wrap: wrap;
	gap: 3%;
	justify-content: space-evenly;
}
	</pre>

	<div class="outline">
		<div class="container gap-40px flex-wrap space-evenly">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
		</div>
	</div>

	<h3>Grid</h3>

	<pre>
.container {
	display: flex;
	flex-wrap: wrap;
	flex-grow: 1;
	--gap: 20px;
	gap: var(--gap);
}

.item-50% {
	width: calc(50% - var(--gap))
}
	</pre>

	<div class="outline">
		<div class="container gap-20px flex-wrap grow">
			<div class="item-50%">A</div>
			<div class="item-50%">B</div>
			<div class="item-50%">C</div>
			<div class="item-50%">D</div>
		</div>
	</div>

	<h3>Columns and Rows Independently</h3>

	<pre>
.container {
	display: flex;
	flex-wrap: wrap;
	row-gap: 40px;
}

.container .container {
	display: flex;
	flex-wrap: wrap;
	column-gap: 20px;
}
	</pre>

	<div class="outline">
		<div class="container row-gap-40px flex-wrap">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
			<div class="container column-gap-20px flex-wrap">
				<div>A</div>
				<div>B</div>
				<div>C</div>
				<div>D</div>
			</div>
		</div>
	</div>

	<h3>When container doesn't have flex</h3>

	<pre>
.container {
	display: grid;
	gap: 40px;
	margin-left: 40px;
}
	</pre>

	<div class="outline">
		<div class="container grid gap-40px-no-flex">
			<div>A</div>
			<div>B</div>
			<div>C</div>
			<div>D</div>
		</div>
	</div>

</div>

	</body>

</html>

